-#  Copyright (C) 2013, 2014, 2015 Dr. Thomas Schank  (DrTom@schank.ch, Thomas.Schank@algocon.ch)
-#  Licensed under the terms of the GNU Affero General Public License v3.
-#  See the LICENSE.txt file provided with this software.

- task ||= @task
- state = task.state
.row
  .col-md-6
    %ol.breadcrumb.pull-left
      = render '/breadcrumbs/task', task: task
  .col-md-6
    %ol.breadcrumb.with-circle-separator.pull-right
      %li 
        - if task.result 
          = link_to result_workspace_task_path(task) do
            Result
        - else 
          %span.text-muted Result



%ul.list-inline.actions.pull-right
  %li.for-signed-in-user
    = form_tag retry_workspace_task_path(task), method: 'POST', remote: false do
      = hidden_field_tag :authenticity_token, form_authenticity_token
      = button_tag type: :submit, class: "btn btn-primary" do
        %i.icon-retry
        Retry 


%h1 
  %span.label{class: label_class_for_state(state)}<>
    %i{class: icon_class_for_state(state)}<>
  %span &nbsp; Task "#{task.name}"

%section#trials

  %h2 Trials

  %table.table.striped
    %thead
    %tbody
      - task.trials.reorder(created_at: :asc).each_with_index do |trial,i|
        %tr.trial
          %td
            = link_to workspace_trial_path(trial), 
              class: "label trial-label #{label_class_for_state(trial.state)}" do
              %i{class: icon_class_for_state(trial.state)} 
              =(i+1).ordinalize
          %td
            %ul.list-inline 
              - if trial.scripts.is_a? Hash
                = render partial: 'script_label', 
                  collection: trial.scripts.map{|k,v| v.merge({"id" => k})}, 
                  as: :script,
                  locals: {trial: trial}


%h2 Properties
%table.table.table-bordered.table-condensed
  %thead
  %tbody
    - task.attributes.reject{|k,v| %().include? k}.sort.each do |k,v|
      %tr 
        %td=k 
        %td
          %pre.script{style: "border: none; padding: 0; margin: 0"}<>
            = (v.is_a? Array or v.is_a? Hash) ? v.to_yaml : v


%h2 Task-Specification

%pre= task.task_specification.data.to_yaml
