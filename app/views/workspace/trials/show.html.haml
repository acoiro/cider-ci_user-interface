-#  Copyright (C) 2013, 2014, 2015 Dr. Thomas Schank  (DrTom@schank.ch, Thomas.Schank@algocon.ch)
-#  Licensed under the terms of the GNU Affero General Public License v3.
-#  See the LICENSE.txt file provided with this software.

:ruby
  trial ||= @trial
  scripts= trial.scripts.select(:key,:name,:state)
  issues = trial.trial_issues
  cache_signature = CacheSignature.signature trial.cache_signature,
          trial.trial_attachments.collection_cache_signature, admin?


- cache cache_signature do

  - reload_timeout= session_adjust_reload_timeout(%w(aborted failed passed).include?(trial.state) ? 30 : 3)
  #reload-page{data: { cache_signature: cache_signature, reload_timeout: reload_timeout}}

    #trial.reload{data: {cache_signature: cache_signature}}

      .row
        .col-md-6
          %ol.breadcrumb.pull-left
            =render '/breadcrumbs/trial', trial: trial
        .col-md-6
          %ol.breadcrumb.with-circle-separator.pull-right
            = render 'breadcrumbs/items/trial_attachments', trial: trial

            - if issues.count > 0
              %li#issues-link.reload{data: {cache_signature: issues.count}}
                = link_to issues_workspace_trial_path(trial) do
                  %span.text-danger= pluralize(issues.count,"Issue")

            - if trial.result
              %li
                = link_to result_workspace_trial_path(trial) do
                  Result

            %li
              = link_to api_browser_path("/trial/#{trial.id}")  do
                %icon.icon-raw-data
                Data via API

      #issues-alert.reload{data: {cache_signature: issues.count}}
        - if issues.count >= 1
          .alert.alert-danger
            %p This trial has #{pluralize(issues.count,"issue")}!


      %ul.list-inline.actions.pull-right
        %li.for-signed-in-user
          = form_tag retry_workspace_task_path(trial.task), method: 'POST', remote: false do
            = hidden_field_tag :authenticity_token, form_authenticity_token
            = button_tag type: :submit, class: "btn btn-primary" do
              %i.icon-retry
              Retry


      %h1{style: "margin-top: 10px"}
        Trial
        = render 'for_task_header', task: trial.task

      - if trial.error.present?
        .alert.alert-danger
          %h2 Error
          %pre.script= trial.error


      %ul.enumeration.list-unstyled.list-inline
        %li
          %span<>= render "label_for_state", state: trial.state
          &nbsp;
          %span>= trial.state
        -if trial.started_at
          %li
            %span started
            %b<>= render 'humanized_time_from_now', at: trial.started_at
        - if trial.finished_at and trial.started_at
          %li
            executed in
            %b= distance_of_time_in_words(trial.started_at,trial.finished_at,
              include_seconds: true)
            (#{(trial.finished_at - trial.started_at).round(2)} seconds)
        - if executor_name = trial.executor.try(:name)
          %li
            on
            %b #{executor_name}

      %section#overview
        %h2 Scripts Overview
        %ul.list-inline
          = render partial: 'script_label', collection: scripts,
            as: :script, locals: {trial: trial}


      :ruby
        has_start_when_dependencies = trial.scripts.present? \
          && trial.scripts.to_a.length >= 2 \
          && trial.scripts.any?{|s| s.start_when.present?}

        has_terminate_when_dependencies = trial.scripts.present? \
            && trial.scripts.to_a.length >= 2 \
            && trial.scripts.any?{|s| s.terminate_when.present?}

        has_some_dependency = has_start_when_dependencies || has_terminate_when_dependencies

      - if has_some_dependency
        - if has_start_when_dependencies
          %section#start-dependencies
            :ruby
              svg_start_deps_path=
                scripts_start_dependency_graph_workspace_trial_path(format: :svg)
              cache_signature= scripts_dependency_svg_graph_cache_signature(trial)
            %h2
              =link_to svg_start_deps_path do
                %i.fa.fa-image
                Start-Dependencies
            - begin
              #start-dependencies-graph.reload{style: 'text-align: center;',
                  data: { cache_signature: cache_signature}}
                = render 'scripts_start_dependency_graph.svg.haml',
                  trial: trial, cache_signature: cache_signature
            - rescue Exception => e
              - Rails.logger.error Formatter.exception_to_log_s e
              .alert.alert-warning
                Error during rendering of the dependency graph!
                See the server logs for details.

        - if has_terminate_when_dependencies
          %section#terminate-dependencies
            - begin
              :ruby
                svg_terminate_deps_path=
                  scripts_terminate_dependency_graph_workspace_trial_path(format: :svg)
                cache_signature= scripts_dependency_svg_graph_cache_signature(trial,:terminate)
              %h2
                =link_to svg_terminate_deps_path do
                  %i.fa.fa-image
                  Terminate-Dependencies
              #terminate-dependencies-graph.reload{style: 'text-align: center;',
                  data: { cache_signature: cache_signature}}
                = render 'scripts_terminate_dependency_graph.svg.haml',
                  trial: trial, cache_signature: cache_signature
            - rescue Exception => e
              - Rails.logger.error Formatter.exception_to_log_s e
              .alert.alert-warning
                Error during rendering of the dependency graph!
                See the server logs for details.

        %section#gantt-chart
          %h2
            = link_to scripts_gantt_chart_workspace_trial_path(format: :svg) do
              %i.icon-gantt-chart
              Gantt-Chart
          - begin
            :ruby
              cache_signature= CacheSignature.signature(trial)
            #scripts-gantt-chart.reload{style: 'text-align: center',
               data: { cache_signature: cache_signature}}
              = render 'scripts_gantt_chart.svg.haml', trial: trial
          - rescue Exception => e
            - Rails.logger.error Formatter.exception_to_log_s e
            .alert.alert-warning
              Error during rendering of the Gantt-chart!
              See the server logs for details.
