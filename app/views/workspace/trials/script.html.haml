:ruby
  script ||= Script.find_by(trial_id: params[:id], key: params[:key])
  cache_signature = script.cache_signature
  pre_elements = %w(body stderr stdout)

- page_links = capture_haml do
  - cache "workspace/trials#scripts page_links" do
    .btn-group
      %a.btn.btn-default.btn-sm{href: "#page"}
        %icon.fa.fa-step-backward.fa-rotate-90
        &nbsp;Page
      //%a.btn.btn-default.btn-sm{href: "#page_bottom"}
      //  %icon.fa.fa-step-backward.fa-rotate-270
    - pre_elements.each do |property|
      - end_anchor= "#{property}_bottom"
      .btn-group
        %a.btn.btn-default.btn-sm{href: "##{property}"}
          %icon.fa.fa-step-backward.fa-rotate-90
          &nbsp; #{property.camelize}
        %a.btn.btn-default.btn-sm{href: "##{end_anchor}"}
          %icon.fa.fa-step-backward.fa-rotate-270

- cache cache_signature do

  :ruby
    reload_timeout = Settings.constants.STATES.FINISHED.include?(script.state) ? 60 : 3

  .row
    .col-md-10
      %ol.breadcrumb.pull-left
        =render '/breadcrumbs/script', script: script
    .col-md-2
      %ol.breadcrumb.with-circle-separator.pull-right
        %li
          = link_to api_browser_path("/scripts/#{script.id}")  do
            %icon.icon-raw-data
            Data



  %h1
    Script
    %em.name= script.name
    = render 'for_task_header', task: script.trial.task

  #reload-page{data: { cache_signature: cache_signature, reload_timeout: reload_timeout}}

    %ul.enumeration.list-unstyled.list-inline
      %li#state.reload{data: {cache_signature: script.state}}
        %span<>= render "label_for_state", state: script.state
        &nbsp;
        %span= script.state
      - if script.started_at and script.finished_at
        - duration = script.finished_at - script.started_at
        %li#duration.reload{data: {cache_signature: duration}}
          in
          %span.humanize-duration{data: {duration: duration}} #{duration} seconds
          %span (#{duration.round} #{"second".pluralize(duration.round)})
      - elsif script.started_at
        - duration = Time.zone.now - script.started_at
        %li#duration.reload{data: {cache_signature: duration}}
          since
          %span.humanize-duration{data: {duration: duration}} #{duration} seconds
          %span (#{duration.round} #{"second".pluralize(duration.round)})

    - pre_elements.each do |property|
      :ruby
        value = script[property]
        cache_signature= CacheSignature.signature(value)
      %section.reload{id: property, data: {cache_signature: cache_signature}}
        - end_anchor= "#{property}_bottom"
        %h3
          .pull-right= page_links
          = property.camelize
        %pre=  value.is_a?(String) ? value : value.to_yaml
        .end{id: end_anchor}


    .pull-right= page_links
