
# Development Guide for the UI (only)

It is possible to run this part of Cider-CI in development mode without
connecting it to the other Cider-CI services. It is also possible (and
recommended) to use MRI ruby (instead of JRuby) in development mode.

## Dependencies 

A few dependencies remain: 

  * A recent ruby with bundler (we recommend to install it with rbenv)
  * The Postgresql data base system version 9.4 or later 

## Quick Setup 

```sh
git clone https://github.com/cider-ci/cider-ci_user-interface cider-ui
cd cider-ui
cp config/database_dev.yml config/database.yml
cp config/secrets_dev.yml config/secrets.yml 
```

From here the workflow is standard ruby on rails procedure. 

## Data 

You probably need some data: 

```shell
bundle exec rake db:truncate db:load_data FILE=./db/personas.data.psql
```

This comes with two "personas": 

```yaml
- login: adam
  password: password
- login: normin
  password: password
````

### More specific data

Need more specific data? Then try the factories: [`../spec/factories/`](../spec/factories/)


## CSS Dev

When working on CSS only, it's possible to preview your local styles on any 
running instance. For convienience, a bookmarklet it recommended:

```js
// plain:
$('head link[rel="stylesheet"]').attr("href", "http://localhost:8880/cider-ci/ui/assets/application.css")
```

[Bookmarklet](javascript:(function(){%24('head%20link%5Brel%3D%22stylesheet%22%5D').attr(%22href%22%2C%22http%3A%2F%2Flocalhost%3A8880%2Fcider-ci%2Fui%2Fassets%2Fapplication.css%3F%22%2BDate.now())%3B})();)
(will not work on github)


## Running the server 

By convention,the services of Cider-CI run each within their own subcontext.
The default is is `/cider-ci/ui` for the user interface.

    RAILS_RELATIVE_URL_ROOT=/cider-ci/ui rails s -p 8880


## Messaging 

The application will try to open a connection to the configured message broker.
It will procede when in `development` or `test` environment with a warning (to
the console and log) if the connection could not be established. 

